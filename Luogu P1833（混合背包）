题目背景
《爱与愁的故事第四弹·plant》第一章。

题目描述
爱与愁大神后院里种了n棵樱花树，每棵都有美学值Ci。爱与愁大神在每天上学前都会来赏花。爱与愁大神可是生物学霸，他懂得如何欣赏樱花：
一种樱花树看一遍过，一种樱花树最多看Ai遍，一种樱花树可以看无数遍。但是看每棵樱花树都有一定的时间Ti。爱与愁大神离去上学的时间只
剩下一小会儿了。求解看哪几棵樱花树能使美学值最高且爱与愁大神能准时（或提早）去上学。

输入格式
共n+1行：

第1行：三个数：现在时间Ts（几点：几分），去上学的时间Te（几点：几分），爱与愁大神院子里有几棵樱花树n。

第2行~第n+1行：每行三个数：看完第i棵树的耗费时间Ti，第i棵树的美学值Ci，看第i棵树的次数Pi（Pi=0表示无数次，Pi是其他数字表示最多可看的次数Pi）。

输出格式
只有一个整数，表示最大美学值。

6:50 7:00 3
2 1 0
3 3 1
4 5 4

11

#include <iostream>
#include <cstdio>
#include <vector>
#define INF 1000000000
using namespace std;
struct node
{
    int p,v,t;
};
int main()
{
    int starth,startm,endh,endm,n;
    scanf("%d:%d %d:%d %d",&starth,&startm,&endh,&endm,&n);
    vector<node> beauty(n);
    int target = (endh-starth)*60+endm-startm;
    for(int i=0;i<n;i++)    cin>>beauty[i].t>>beauty[i].v>>beauty[i].p;
    vector<int> dp(target+1,-INF);
    dp[0] = 0;
    for(int i=0;i<n;i++)
    {
        if(beauty[i].p==0)
            for(int j=beauty[i].t;j<=target;j++)
                dp[j] = max(dp[j],dp[j-beauty[i].t]+beauty[i].v);
        else
        {
            int num = min(beauty[i].p,target/beauty[i].t);
            for(int k=1;num>0;k<<=1)
            {
                if(k>num)   k = num;
                num-=k;
                for(int j=target;j>=beauty[i].t*k;j--)
                    dp[j] = max(dp[j],dp[j-beauty[i].t*k]+beauty[i].v*k);
            }
        }
    }
    cout<<dp[target]<<endl;
    return 0;
}
